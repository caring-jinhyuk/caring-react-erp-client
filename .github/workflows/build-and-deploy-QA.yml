name: Build and Deploy QA

on: workflow_dispatch

jobs:
  build-and-deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    env:
      BUCKET: test-erp.caring.co.kr
      DIST: /build
      DIST_ID: ET0TVUEK2ZPON

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          node --version
          npm install -g yarn
          yarn install --frozen-lockfile

      - name: Build Static WebSite
        run: |
          yarn run build

      - name: Upload product to S3 bucket
        run: |
          aws s3 sync --delete ${{ env.DIST }} s3://${{ env.BUCKET }}

      - name: Apply Cloudfront Invalidation Generation
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.DIST_ID }} \
            --path "/*"